module ALU (
    input [31:0] A,                // First operand
    input [31:0] B,                // Second operand
    input [2:0] ALUControl,        // Control signal to select operation
    output reg [31:0] ALUResult,   // Result of the operation
    output reg Zero                // Zero flag
);
    always @(*) begin
        case (ALUControl)
            3'b000: ALUResult = A + B;           // Addition
            3'b001: ALUResult = A - B;           // Subtraction
            3'b010: ALUResult = A & B;           // AND
            3'b011: ALUResult = A | B;           // OR
            3'b100: ALUResult = A ^ B;           // XOR
            3'b101: ALUResult = (A < B) ? 32'b1 : 32'b0; // Set Less Than
            default: ALUResult = 32'b0;           // Default case
        endcase
        
        // Set Zero flag
        Zero = (ALUResult == 32'b0) ? 1'b1 : 1'b0;
    end
endmodule
